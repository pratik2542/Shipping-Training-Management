{"version":3,"file":"static/js/665.b5f975ad.chunk.js","mappings":"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","sources":["components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, Container, Paper, Typography, Badge, Snackbar, Alert } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport LocalShippingIcon from '@mui/icons-material/LocalShipping';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport ScienceIcon from '@mui/icons-material/Science';\r\nimport SupervisorAccountIcon from '@mui/icons-material/SupervisorAccount';\r\nimport { signOut } from 'firebase/auth';\r\nimport { collection, getDocs, deleteDoc, query, where } from 'firebase/firestore';\r\nimport { auth, db } from '../firebase/config';\r\nimport { testAuth, testDb } from '../firebase/testConfig';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [pendingCount, setPendingCount] = useState(0);\r\n  const [showNotification, setShowNotification] = useState(false);\r\n  const [userName, setUserName] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getUserName = async () => {\r\n      const isTestUser = localStorage.getItem('isTestUser') === 'true';\r\n      const user = isTestUser ? testAuth.currentUser : auth.currentUser;\r\n      \r\n      if (user) {\r\n        if (isTestUser) {\r\n          // For test users, just use their email as name\r\n          setUserName(user.email.split('@')[0]); // Gets username part of email\r\n        } else {\r\n          // For regular users, get name from userRequests\r\n          const userQuery = query(\r\n            collection(db, 'userRequests'),\r\n            where('email', '==', user.email),\r\n            where('status', '==', 'approved')\r\n          );\r\n          \r\n          try {\r\n            const querySnapshot = await getDocs(userQuery);\r\n            if (!querySnapshot.empty) {\r\n              const userData = querySnapshot.docs[0].data();\r\n              setUserName(userData.name || 'User');\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching user name:', error);\r\n            setUserName('User');\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    getUserName();\r\n\r\n    const checkAdminAndPending = async () => {\r\n      const isTestUser = localStorage.getItem('isTestUser') === 'true';\r\n      const storedAdmin = localStorage.getItem('isAdmin') === 'true';\r\n      \r\n      // Only set admin if user is not a test user and is an admin\r\n      if (storedAdmin && !isTestUser) {\r\n        setIsAdmin(true);\r\n        // Check for pending requests\r\n        const pendingQuery = query(\r\n          collection(db, 'userRequests'),\r\n          where('status', '==', 'pending')\r\n        );\r\n        const pendingSnapshot = await getDocs(pendingQuery);\r\n        const count = pendingSnapshot.size;\r\n        setPendingCount(count);\r\n        setShowNotification(count > 0);\r\n      }\r\n    };\r\n    \r\n    checkAdminAndPending();\r\n  }, []);\r\n\r\n  const cleanupTestData = async () => {\r\n    try {\r\n      // Get all documents from test_shipments collection\r\n      const querySnapshot = await getDocs(collection(testDb, 'test_shipments'));\r\n      \r\n      // Delete each document\r\n      const deletePromises = querySnapshot.docs.map(doc => deleteDoc(doc.ref));\r\n      await Promise.all(deletePromises);\r\n\r\n      // Delete test user account\r\n      const user = testAuth.currentUser;\r\n      if (user) {\r\n        await user.delete();\r\n      }\r\n      \r\n      console.log('Test data cleanup completed');\r\n    } catch (error) {\r\n      console.error('Error cleaning up test data:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const isTestUser = localStorage.getItem('isTestUser') === 'true';\r\n      \r\n      if (isTestUser) {\r\n        // First clean up all test data\r\n        await cleanupTestData();\r\n        // Then sign out\r\n        await signOut(testAuth);\r\n      } else {\r\n        await signOut(auth);\r\n      }\r\n      \r\n      localStorage.removeItem('isTestUser');\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Error during logout:', error);\r\n      // Still try to navigate away even if there's an error\r\n      localStorage.removeItem('isTestUser');\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center',\r\n        mt: 2 \r\n      }}>\r\n        <Typography variant=\"h6\" color=\"primary\">\r\n          Welcome, {userName}\r\n        </Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          startIcon={<LogoutIcon />}\r\n          onClick={handleLogout}\r\n        >\r\n          Logout\r\n        </Button>\r\n      </Box>\r\n      <Typography \r\n        variant=\"h4\" \r\n        component=\"h1\" \r\n        sx={{ \r\n          textAlign: 'center', \r\n          mt: 4, \r\n          mb: 4,\r\n          fontWeight: 600,\r\n          color: 'primary.main'\r\n        }}\r\n      >\r\n        Shipping Management Dashboard\r\n      </Typography>\r\n\r\n      {/* Add Snackbar for notification */}\r\n      <Snackbar\r\n        open={showNotification}\r\n        autoHideDuration={6000}\r\n        onClose={() => setShowNotification(false)}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      >\r\n        <Alert \r\n          severity=\"info\" \r\n          onClose={() => setShowNotification(false)}\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {pendingCount} user registration {pendingCount === 1 ? 'request' : 'requests'} pending approval\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Box\r\n        sx={{\r\n          display: 'grid',\r\n          gridTemplateColumns: { xs: '1fr', md: '1fr 1fr 1fr' },\r\n          gap: 3,\r\n          padding: 2,\r\n        }}\r\n      >\r\n        <Paper\r\n          elevation={3}\r\n          sx={{\r\n            p: 3,\r\n            textAlign: 'center',\r\n            transition: 'transform 0.2s',\r\n            '&:hover': {\r\n              transform: 'translateY(-4px)',\r\n            },\r\n          }}\r\n        >\r\n          <LocalShippingIcon sx={{ fontSize: 60, color: 'primary.main', mb: 2 }} />\r\n          <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n            Create New Shipment\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            fullWidth\r\n            onClick={() => navigate('/shipping-form')}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Create Form\r\n          </Button>\r\n        </Paper>\r\n\r\n        <Paper\r\n          elevation={3}\r\n          sx={{\r\n            p: 3,\r\n            textAlign: 'center',\r\n            transition: 'transform 0.2s',\r\n            '&:hover': {\r\n              transform: 'translateY(-4px)',\r\n            },\r\n          }}\r\n        >\r\n          <ListAltIcon sx={{ fontSize: 60, color: 'primary.main', mb: 2 }} />\r\n          <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n            View Shipments\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            fullWidth\r\n            onClick={() => navigate('/records')}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            View Records\r\n          </Button>\r\n        </Paper>\r\n\r\n        <Paper\r\n          elevation={3}\r\n          sx={{\r\n            p: 3,\r\n            textAlign: 'center',\r\n            transition: 'transform 0.2s',\r\n            '&:hover': {\r\n              transform: 'translateY(-4px)',\r\n            },\r\n          }}\r\n        >\r\n          <ScienceIcon sx={{ fontSize: 60, color: 'primary.main', mb: 2 }} />\r\n          <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n            Manufacturing\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            fullWidth\r\n            onClick={() => navigate('/manufacturing')}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Manufacturing\r\n          </Button>\r\n        </Paper>\r\n      </Box>\r\n      {isAdmin && (\r\n        <Box sx={{ mt: 4 }}>\r\n          <Typography \r\n            variant=\"h5\" \r\n            sx={{ \r\n              mb: 3, \r\n              color: 'secondary.main',\r\n              fontWeight: 600 \r\n            }}\r\n          >\r\n            Admin Controls\r\n          </Typography>\r\n          <Paper\r\n            elevation={3}\r\n            sx={{\r\n              p: 3,\r\n              textAlign: 'center',\r\n              transition: 'transform 0.2s',\r\n              '&:hover': {\r\n                transform: 'translateY(-4px)',\r\n              },\r\n              backgroundColor: 'secondary.light',\r\n            }}\r\n          >\r\n            <SupervisorAccountIcon sx={{ fontSize: 60, color: 'secondary.main', mb: 2 }} />\r\n            <Typography variant=\"h6\" sx={{ mb: 2, color: 'white' }}>\r\n              User Verification\r\n              {pendingCount > 0 && (\r\n                <Badge \r\n                  badgeContent={pendingCount} \r\n                  color=\"error\" \r\n                  sx={{ ml: 2 }}\r\n                />\r\n              )}\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              fullWidth\r\n              onClick={() => navigate('/admin/verify')}\r\n              sx={{ \r\n                mt: 2,\r\n                backgroundColor: 'secondary.dark',\r\n                '&:hover': {\r\n                  backgroundColor: 'secondary.main',\r\n                }\r\n              }}\r\n            >\r\n              Manage Users\r\n              {pendingCount > 0 && ` (${pendingCount} Pending)`}\r\n            </Button>\r\n          </Paper>\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"names":["Dashboard","navigate","useNavigate","isAdmin","setIsAdmin","useState","pendingCount","setPendingCount","showNotification","setShowNotification","userName","setUserName","useEffect","async","isTestUser","localStorage","getItem","user","testAuth","currentUser","auth","email","split","userQuery","query","collection","db","where","querySnapshot","getDocs","empty","userData","docs","data","name","error","console","getUserName","pendingQuery","count","size","checkAdminAndPending","_jsxs","Container","maxWidth","children","Box","sx","display","justifyContent","alignItems","mt","Typography","variant","color","_jsx","Button","startIcon","LogoutIcon","onClick","deletePromises","testDb","map","doc","deleteDoc","ref","Promise","all","delete","log","cleanupTestData","signOut","removeItem","component","textAlign","mb","fontWeight","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","width","gridTemplateColumns","xs","md","gap","padding","Paper","elevation","p","transition","transform","LocalShippingIcon","fontSize","fullWidth","ListAltIcon","ScienceIcon","backgroundColor","SupervisorAccountIcon","Badge","badgeContent","ml"],"sourceRoot":""}