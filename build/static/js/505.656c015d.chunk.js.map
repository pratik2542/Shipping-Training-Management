{"version":3,"file":"static/js/505.656c015d.chunk.js","mappings":"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","sources":["utils/emailService.js","components/AdminVerification.js"],"sourcesContent":["// Fix EmailJS initialization and error handling\r\n\r\nimport emailjs from '@emailjs/browser';\r\n\r\n// Initialize EmailJS with your public key\r\n// This should be done once when the app starts\r\nemailjs.init(\"P_vvkj76LJzEvipCY\");\r\n\r\nconst SERVICE_ID = 'service_1pw3job';\r\nconst TEMPLATE_ID = 'template_d7h6i4d';\r\n\r\n// Wrapper function to ensure emailjs is initialized before sending\r\nconst safeEmailjsSend = async (serviceId, templateId, templateParams) => {\r\n  try {\r\n    if (!emailjs.send) {\r\n      console.error('EmailJS send function not available');\r\n      throw new Error('Email service not properly initialized');\r\n    }\r\n    return await emailjs.send(serviceId, templateId, templateParams);\r\n  } catch (error) {\r\n    console.error('Error in emailjs.send:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const sendEmail = async ({ to, name, subject, html }) => {\r\n  try {\r\n    const templateParams = {\r\n      to_email: to,\r\n      to_name: name,\r\n      subject: subject,\r\n      message: html\r\n    };\r\n\r\n    console.log('Sending email with params:', templateParams);\r\n    const response = await safeEmailjsSend(SERVICE_ID, TEMPLATE_ID, templateParams);\r\n    console.log('Email sent successfully:', response);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error sending email:', error);\r\n    throw new Error(`Error sending email: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const sendApprovalEmail = async (userData, tempPassword) => {\r\n  try {\r\n    const userName = userData.name || userData.email.split('@')[0];\r\n    \r\n    // When using EmailJS templates, just pass the template variables\r\n    const templateParams = {\r\n      to_email: userData.email,\r\n      to_name: userName,\r\n      message: tempPassword,\r\n      subject: \"Your Account Has Been Approved\"\r\n    };\r\n\r\n    console.log('Sending approval email to:', userData.email);\r\n    const response = await safeEmailjsSend(SERVICE_ID, TEMPLATE_ID, templateParams);\r\n    console.log('Approval email sent successfully:', response);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Failed to send approval email:', error);\r\n    // Show the error but continue with the approval process\r\n    alert(`Note: Email could not be sent to ${userData.email}. Please inform the user manually.`);\r\n    // Return a fake success to allow the approval process to continue\r\n    return { status: \"Email failed but continuing with approval\" };\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Container, \r\n  Paper, \r\n  Typography, \r\n  Button, \r\n  Tabs, \r\n  Tab, \r\n  Box, \r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  TextField,\r\n  InputAdornment,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { collection, query, getDocs, doc, updateDoc, orderBy } from 'firebase/firestore';\r\nimport { db } from '../firebase/config';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { useTheme, useMediaQuery } from '@mui/material';\r\nimport { sendApprovalEmail } from '../utils/emailService';\r\n\r\nconst AdminVerification = () => {\r\n  const [requests, setRequests] = useState([]);\r\n  const [filteredRequests, setFilteredRequests] = useState([]);\r\n  const [tabValue, setTabValue] = useState(0); // 0: Pending, 1: Approved, 2: Rejected\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [confirmError, setConfirmError] = useState('');\r\n  const [userToApprove, setUserToApprove] = useState(null);\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  useEffect(() => {\r\n    // Check if user is admin\r\n    const isAdmin = localStorage.getItem('isAdmin') === 'true';\r\n    if (!isAdmin) {\r\n      navigate('/dashboard');\r\n      return;\r\n    }\r\n    \r\n    fetchRequests();\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    // Filter requests based on search term and selected tab\r\n    const filtered = requests.filter(request => {\r\n      const matchesSearch = !searchTerm || \r\n        request.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        request.email?.toLowerCase().includes(searchTerm.toLowerCase());\r\n        \r\n      const matchesTab = \r\n        (tabValue === 0 && request.status === 'pending') || \r\n        (tabValue === 1 && request.status === 'approved') ||\r\n        (tabValue === 2 && request.status === 'rejected');\r\n        \r\n      return matchesSearch && matchesTab;\r\n    });\r\n    \r\n    setFilteredRequests(filtered);\r\n  }, [requests, searchTerm, tabValue]);\r\n\r\n  const fetchRequests = async () => {\r\n    try {\r\n      const q = query(\r\n        collection(db, 'userRequests'),\r\n        orderBy('createdAt', 'desc')\r\n      );\r\n      \r\n      const snapshot = await getDocs(q);\r\n      const requestsData = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      \r\n      setRequests(requestsData);\r\n      console.log('Requests loaded:', requestsData.length);\r\n    } catch (error) {\r\n      console.error('Error fetching requests:', error);\r\n      alert('Error loading user requests');\r\n    }\r\n  };\r\n\r\n  const initiateUserApproval = (request) => {\r\n    setUserToApprove(request);\r\n    setConfirmError('');\r\n    setConfirmDialogOpen(true);\r\n  };\r\n\r\n  // Fix the issue where admin gets logged out after approving a user\r\n\r\n  // In the handleUserAction function, replace the createUserWithEmailAndPassword approach\r\n  // with the Firebase Admin SDK or REST API approach\r\n\r\n  const handleUserAction = async (request, action) => {\r\n    try {\r\n      const requestRef = doc(db, 'userRequests', request.id);\r\n      \r\n      if (action === 'approve') {\r\n        try {\r\n          // Instead of using Auth SDK directly which affects the current session,\r\n          // we'll use the Firebase Authentication REST API\r\n          \r\n          // Get API key from Firebase config\r\n          const firebaseConfig = {\r\n            apiKey: process.env.REACT_APP_FIREBASE_API_KEY || \"AIzaSyBLAlnwwRasaBO88OsM8GsJ0os-8bwAT08\",\r\n            // ...other config values\r\n          };\r\n          \r\n          const API_KEY = firebaseConfig.apiKey;\r\n          const tempPassword = 'tempPassword123'; // Default temp password\r\n          \r\n          // Create user with email/password using REST API\r\n          const createUserEndpoint = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`;\r\n          const createUserOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              email: request.email,\r\n              password: tempPassword,\r\n              returnSecureToken: false\r\n            })\r\n          };\r\n          \r\n          try {\r\n            await fetch(createUserEndpoint, createUserOptions);\r\n            console.log('User created successfully');\r\n          } catch (error) {\r\n            console.log('User might already exist, continuing with approval');\r\n          }\r\n          \r\n          // Instead of sending Firebase reset email, send our custom email with EmailJS\r\n          await sendApprovalEmail(request, tempPassword);\r\n          \r\n          // Update request status in Firestore\r\n          await updateDoc(requestRef, {\r\n            status: 'approved',\r\n            approvedAt: new Date().toISOString()\r\n          });\r\n          \r\n          // Refresh the list\r\n          fetchRequests();\r\n          alert(`User ${request.email} approved and welcome email sent.`);\r\n          \r\n        } catch (error) {\r\n          console.error('Error during user approval:', error);\r\n          throw error;\r\n        }\r\n      } else if (action === 'reject') {\r\n        await updateDoc(requestRef, { \r\n          status: 'rejected',\r\n          rejectedAt: new Date().toISOString()\r\n        });\r\n        \r\n        fetchRequests();\r\n        alert(`User ${request.email} rejected.`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating user status:', error);\r\n      alert(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Also update the handleConfirmApproval function to use the REST API for authentication\r\n  const handleConfirmApproval = async (password) => {\r\n    if (!userToApprove || !password) return;\r\n    \r\n    setConfirmLoading(true);\r\n    setConfirmError('');\r\n    \r\n    try {\r\n      // Get admin email from localStorage\r\n      const adminEmail = localStorage.getItem('adminEmail');\r\n      if (!adminEmail) {\r\n        throw new Error('Admin session not found. Please log in again.');\r\n      }\r\n      \r\n      // Get API key from config\r\n      const firebaseConfig = {\r\n        apiKey: process.env.REACT_APP_FIREBASE_API_KEY || \"AIzaSyBLAlnwwRasaBO88OsM8GsJ0os-8bwAT08\",\r\n        // ...other config values\r\n      };\r\n      \r\n      const API_KEY = firebaseConfig.apiKey;\r\n      \r\n      // Verify admin password using REST API\r\n      try {\r\n        const verifyEndpoint = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`;\r\n        const verifyOptions = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            email: adminEmail,\r\n            password: password,\r\n            returnSecureToken: true\r\n          })\r\n        };\r\n        \r\n        const response = await fetch(verifyEndpoint, verifyOptions);\r\n        const data = await response.json();\r\n        \r\n        if (data.error) {\r\n          console.error('Authentication error:', data.error);\r\n          setConfirmError(data.error.message);\r\n          setConfirmLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Successfully authenticated - proceed with approval\r\n        await handleUserAction(userToApprove, 'approve');\r\n        setConfirmDialogOpen(false);\r\n        \r\n      } catch (error) {\r\n        console.error('Authentication error:', error);\r\n        setConfirmError('Authentication failed. Please try again.');\r\n        setConfirmLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Confirmation error:', error);\r\n      setConfirmError(error.message);\r\n    } finally {\r\n      setConfirmLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const openUserDetails = (user) => {\r\n    setSelectedUser(user);\r\n    setDialogOpen(true);\r\n  };\r\n  \r\n  // Format date from ISO string to readable format\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    \r\n    const date = new Date(dateString);\r\n    return date.toLocaleString();\r\n  };\r\n  \r\n  // Render a user card for mobile view\r\n  const renderMobileUserCard = (request) => (\r\n    <Paper\r\n      key={request.id}\r\n      elevation={2}\r\n      sx={{\r\n        mb: 2,\r\n        p: 2,\r\n        border: '1px solid #eaeaea',\r\n        backgroundColor: \r\n          request.status === 'approved' ? '#f0f7f0' :\r\n          request.status === 'rejected' ? '#f7f0f0' : 'white'\r\n      }}\r\n    >\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n          <PersonIcon sx={{ mr: 1, color: 'primary.main' }} />\r\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n            {request.name || 'No Name'}\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <EmailIcon sx={{ mr: 1, fontSize: '1rem', color: 'text.secondary' }} />\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {request.email}\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <AccessTimeIcon sx={{ mr: 1, fontSize: '1rem', color: 'text.secondary' }} />\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {formatDate(request.createdAt)}\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <Box sx={{ \r\n          display: 'flex', \r\n          alignItems: 'center',\r\n          color: \r\n            request.status === 'approved' ? 'success.main' :\r\n            request.status === 'rejected' ? 'error.main' : 'warning.main',\r\n          mt: 1\r\n        }}>\r\n          {request.status === 'approved' ? (\r\n            <CheckCircleIcon sx={{ mr: 1, fontSize: '1.2rem' }} />\r\n          ) : request.status === 'rejected' ? (\r\n            <CancelIcon sx={{ mr: 1, fontSize: '1.2rem' }} />\r\n          ) : (\r\n            <AccessTimeIcon sx={{ mr: 1, fontSize: '1.2rem' }} />\r\n          )}\r\n          <Typography \r\n            variant=\"body1\" \r\n            sx={{ \r\n              fontWeight: 600,\r\n              textTransform: 'capitalize'\r\n            }}\r\n          >\r\n            {request.status}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      \r\n      {/* Action buttons */}\r\n      {request.status === 'pending' && (\r\n        <Box \r\n          sx={{ \r\n            display: 'flex', \r\n            justifyContent: 'space-between', \r\n            mt: 2,\r\n            pt: 2,\r\n            borderTop: '1px solid #eaeaea'\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            sx={{ flex: 1, mr: 1 }}\r\n            onClick={() => initiateUserApproval(request)}\r\n          >\r\n            Approve\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n            size=\"small\"\r\n            sx={{ flex: 1, ml: 1 }}\r\n            onClick={() => handleUserAction(request, 'reject')}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      \r\n      <Button\r\n        variant=\"text\"\r\n        fullWidth\r\n        onClick={() => openUserDetails(request)}\r\n        sx={{ mt: 1 }}\r\n        endIcon={<MoreVertIcon />}\r\n      >\r\n        View Details\r\n      </Button>\r\n    </Paper>\r\n  );\r\n  \r\n  // Render a table row for desktop view\r\n  const renderTableRow = (request) => (\r\n    <TableRow \r\n      key={request.id}\r\n      sx={{\r\n        backgroundColor: \r\n          request.status === 'approved' ? '#f0f7f0' :\r\n          request.status === 'rejected' ? '#f7f0f0' : 'white',\r\n        '&:hover': { backgroundColor: 'action.hover' }\r\n      }}\r\n    >\r\n      <TableCell>{request.name || 'No Name'}</TableCell>\r\n      <TableCell>{request.email}</TableCell>\r\n      <TableCell>{formatDate(request.createdAt)}</TableCell>\r\n      <TableCell>\r\n        <Box sx={{ \r\n          display: 'flex', \r\n          alignItems: 'center',\r\n          color: \r\n            request.status === 'approved' ? 'success.main' :\r\n            request.status === 'rejected' ? 'error.main' : 'warning.main'\r\n        }}>\r\n          {request.status === 'approved' ? (\r\n            <CheckCircleIcon sx={{ mr: 1, fontSize: 'small' }} />\r\n          ) : request.status === 'rejected' ? (\r\n            <CancelIcon sx={{ mr: 1, fontSize: 'small' }} />\r\n          ) : (\r\n            <AccessTimeIcon sx={{ mr: 1, fontSize: 'small' }} />\r\n          )}\r\n          <Typography \r\n            sx={{ \r\n              fontWeight: 500,\r\n              textTransform: 'capitalize'\r\n            }}\r\n          >\r\n            {request.status}\r\n          </Typography>\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell>\r\n        {request.status === 'pending' && (\r\n          <>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              sx={{ mr: 1 }}\r\n              onClick={() => initiateUserApproval(request)}\r\n            >\r\n              Approve\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              size=\"small\"\r\n              onClick={() => handleUserAction(request, 'reject')}\r\n            >\r\n              Reject\r\n            </Button>\r\n          </>\r\n        )}\r\n        <Button\r\n          variant=\"text\"\r\n          size=\"small\"\r\n          sx={{ ml: 1 }}\r\n          onClick={() => openUserDetails(request)}\r\n        >\r\n          Details\r\n        </Button>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n  \r\n  // User details dialog\r\n  const UserDetailsDialog = () => (\r\n    <Dialog \r\n      open={dialogOpen} \r\n      onClose={() => setDialogOpen(false)}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      fullScreen={isMobile}\r\n    >\r\n      <DialogTitle sx={{ \r\n        fontSize: isMobile ? '1.25rem' : '1.5rem',\r\n        fontWeight: 500,\r\n        borderBottom: '1px solid #eaeaea',\r\n        pb: 2\r\n      }}>\r\n        User Details\r\n      </DialogTitle>\r\n      <DialogContent sx={{ mt: 2 }}>\r\n        {selectedUser && (\r\n          <Box sx={{ px: isMobile ? 0 : 2 }}>\r\n            <List>\r\n              <ListItem sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                  Name\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {selectedUser.name || 'No name provided'}\r\n                </Typography>\r\n              </ListItem>\r\n              <Divider />\r\n              \r\n              <ListItem sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                  Email\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {selectedUser.email}\r\n                </Typography>\r\n              </ListItem>\r\n              <Divider />\r\n              \r\n              <ListItem sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                  Status\r\n                </Typography>\r\n                <Box sx={{ \r\n                  display: 'flex', \r\n                  alignItems: 'center',\r\n                  color: \r\n                    selectedUser.status === 'approved' ? 'success.main' :\r\n                    selectedUser.status === 'rejected' ? 'error.main' : 'warning.main'\r\n                }}>\r\n                  {selectedUser.status === 'approved' ? (\r\n                    <CheckCircleIcon sx={{ mr: 1 }} />\r\n                  ) : selectedUser.status === 'rejected' ? (\r\n                    <CancelIcon sx={{ mr: 1 }} />\r\n                  ) : (\r\n                    <AccessTimeIcon sx={{ mr: 1 }} />\r\n                  )}\r\n                  <Typography \r\n                    variant=\"body1\" \r\n                    sx={{ \r\n                      fontWeight: 600,\r\n                      textTransform: 'capitalize'\r\n                    }}\r\n                  >\r\n                    {selectedUser.status}\r\n                  </Typography>\r\n                </Box>\r\n              </ListItem>\r\n              <Divider />\r\n              \r\n              <ListItem sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                  Request Date\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {formatDate(selectedUser.createdAt)}\r\n                </Typography>\r\n              </ListItem>\r\n              <Divider />\r\n              \r\n              {selectedUser.status === 'approved' && (\r\n                <>\r\n                  <ListItem sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                    <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                      Approval Date\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                      {formatDate(selectedUser.approvedAt)}\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <Divider />\r\n                </>\r\n              )}\r\n              \r\n              {selectedUser.status === 'rejected' && (\r\n                <>\r\n                  <ListItem sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                    <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                      Rejection Date\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                      {formatDate(selectedUser.rejectedAt)}\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <Divider />\r\n                </>\r\n              )}\r\n            </List>\r\n            \r\n            {selectedUser.status === 'pending' && (\r\n              <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setDialogOpen(false);\r\n                    initiateUserApproval(selectedUser);\r\n                  }}\r\n                  sx={{ flex: 1, mr: 1 }}\r\n                >\r\n                  Approve User\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"error\"\r\n                  onClick={() => {\r\n                    handleUserAction(selectedUser, 'reject');\r\n                    setDialogOpen(false);\r\n                  }}\r\n                  sx={{ flex: 1, ml: 1 }}\r\n                >\r\n                  Reject User\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button \r\n          onClick={() => setDialogOpen(false)}\r\n          variant={isMobile ? \"contained\" : \"text\"}\r\n          fullWidth={isMobile}\r\n        >\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const PasswordConfirmDialog = () => {\r\n    const [localPassword, setLocalPassword] = useState('');\r\n    const inputRef = React.useRef(null);\r\n    \r\n    // Reset local state when dialog opens/closes\r\n    React.useEffect(() => {\r\n      if (confirmDialogOpen) {\r\n        setLocalPassword('');\r\n        // Focus the input after a brief delay to ensure the dialog is fully rendered\r\n        const timer = setTimeout(() => {\r\n          if (inputRef.current) {\r\n            inputRef.current.focus();\r\n          }\r\n        }, 50);\r\n        return () => clearTimeout(timer);\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n  \r\n    const handleConfirmClick = () => {\r\n      if (!localPassword) return;\r\n      // Use the local password state for validation\r\n      handleConfirmApproval(localPassword);\r\n    };\r\n  \r\n    const handleKeyDown = (e) => {\r\n      if (e.key === 'Enter' && localPassword && !confirmLoading) {\r\n        e.preventDefault();\r\n        handleConfirmClick();\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <Dialog\r\n        open={confirmDialogOpen}\r\n        onClose={() => !confirmLoading && setConfirmDialogOpen(false)}\r\n        maxWidth=\"xs\"\r\n        fullWidth\r\n        disableEscapeKeyDown={confirmLoading}\r\n      >\r\n        <DialogTitle sx={{ \r\n          borderBottom: '1px solid #eaeaea', \r\n          pb: 2,\r\n          fontWeight: 500\r\n        }}>\r\n          Confirm Admin Password\r\n        </DialogTitle>\r\n        <DialogContent sx={{ pt: 3, pb: 1 }}>\r\n          <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n            Please enter your password to approve:\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" sx={{ mb: 3, fontWeight: 600 }}>\r\n            {userToApprove?.email}\r\n          </Typography>\r\n          <TextField\r\n            inputRef={inputRef}\r\n            fullWidth\r\n            type=\"password\"\r\n            label=\"Admin Password\"\r\n            variant=\"outlined\"\r\n            value={localPassword}\r\n            onChange={(e) => setLocalPassword(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            error={!!confirmError}\r\n            helperText={confirmError}\r\n            disabled={confirmLoading}\r\n            autoComplete=\"current-password\"\r\n            sx={{\r\n              '& .MuiOutlinedInput-root': {\r\n                '&.Mui-focused': {\r\n                  boxShadow: '0 0 0 2px rgba(25, 118, 210, 0.2)',\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions sx={{ px: 3, py: 2 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => setConfirmDialogOpen(false)}\r\n            disabled={confirmLoading}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleConfirmClick}\r\n            disabled={!localPassword || confirmLoading}\r\n            sx={{ ml: 1, minWidth: '100px' }}\r\n          >\r\n            {confirmLoading ? (\r\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                <CircularProgress size={20} sx={{ mr: 1 }} />\r\n                <span>Verifying</span>\r\n              </Box>\r\n            ) : (\r\n              'Approve'\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        flexDirection: isMobile ? 'column' : 'row',\r\n        justifyContent: 'space-between', \r\n        alignItems: isMobile ? 'stretch' : 'center', \r\n        mb: 4 \r\n      }}>\r\n        <Typography \r\n          variant=\"h4\" \r\n          sx={{ \r\n            fontWeight: 600, \r\n            color: 'primary.main', \r\n            mt: 2,\r\n            textAlign: 'center',\r\n            fontSize: isMobile ? '1.75rem' : '2.125rem',\r\n            mb: isMobile ? 2 : 0\r\n          }}\r\n        >\r\n          User Verification\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<HomeIcon />}\r\n          onClick={() => navigate('/dashboard')}\r\n          sx={{ alignSelf: isMobile ? 'stretch' : 'flex-end' }}\r\n        >\r\n          Back to Dashboard\r\n        </Button>\r\n      </Box>\r\n\r\n      <Paper elevation={3} sx={{ mb: 4 }}>\r\n        <Tabs \r\n          value={tabValue} \r\n          onChange={handleTabChange}\r\n          variant={isMobile ? \"fullWidth\" : \"standard\"}\r\n          sx={{ borderBottom: 1, borderColor: 'divider' }}\r\n        >\r\n          <Tab \r\n            label=\"Pending\" \r\n            sx={{ py: 2 }} \r\n          />\r\n          <Tab \r\n            label=\"Approved\" \r\n            sx={{ py: 2 }} \r\n          />\r\n          <Tab \r\n            label=\"Rejected\" \r\n            sx={{ py: 2 }} \r\n          />\r\n        </Tabs>\r\n      </Paper>\r\n\r\n      <TextField\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        placeholder=\"Search by name or email\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        sx={{ mb: 3 }}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      {isMobile ? (\r\n        // Mobile view - cards\r\n        <Box>\r\n          {filteredRequests.length === 0 ? (\r\n            <Typography align=\"center\" sx={{ my: 4, color: 'text.secondary' }}>\r\n              No {tabValue === 0 ? 'pending' : tabValue === 1 ? 'approved' : 'rejected'} requests found\r\n            </Typography>\r\n          ) : (\r\n            filteredRequests.map(renderMobileUserCard)\r\n          )}\r\n        </Box>\r\n      ) : (\r\n        // Desktop view - table\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow sx={{ backgroundColor: 'primary.main' }}>\r\n                <TableCell sx={{ color: 'white', fontWeight: 600 }}>Name</TableCell>\r\n                <TableCell sx={{ color: 'white', fontWeight: 600 }}>Email</TableCell>\r\n                <TableCell sx={{ color: 'white', fontWeight: 600 }}>Request Date</TableCell>\r\n                <TableCell sx={{ color: 'white', fontWeight: 600 }}>Status</TableCell>\r\n                <TableCell sx={{ color: 'white', fontWeight: 600 }}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredRequests.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align=\"center\" sx={{ py: 3 }}>\r\n                    No {tabValue === 0 ? 'pending' : tabValue === 1 ? 'approved' : 'rejected'} requests found\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                filteredRequests.map(renderTableRow)\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n\r\n      <UserDetailsDialog />\r\n      <PasswordConfirmDialog />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminVerification;\r\n\r\n"],"names":["emailjs","SERVICE_ID","TEMPLATE_ID","safeEmailjsSend","async","serviceId","templateId","templateParams","console","error","Error","AdminVerification","requests","setRequests","useState","filteredRequests","setFilteredRequests","tabValue","setTabValue","searchTerm","setSearchTerm","selectedUser","setSelectedUser","dialogOpen","setDialogOpen","confirmDialogOpen","setConfirmDialogOpen","confirmLoading","setConfirmLoading","confirmError","setConfirmError","userToApprove","setUserToApprove","navigate","useNavigate","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","useEffect","localStorage","getItem","fetchRequests","filtered","filter","request","_request$name","_request$email","matchesSearch","name","toLowerCase","includes","email","matchesTab","status","q","query","collection","db","orderBy","requestsData","getDocs","docs","map","doc","id","data","log","length","alert","initiateUserApproval","handleUserAction","action","requestRef","tempPassword","createUserEndpoint","apiKey","process","createUserOptions","method","headers","body","JSON","stringify","password","returnSecureToken","fetch","userData","userName","split","to_email","to_name","message","subject","response","sendApprovalEmail","updateDoc","approvedAt","Date","toISOString","rejectedAt","openUserDetails","user","formatDate","dateString","toLocaleString","UserDetailsDialog","_jsxs","Dialog","open","onClose","fullWidth","maxWidth","fullScreen","children","_jsx","DialogTitle","sx","fontSize","fontWeight","borderBottom","pb","DialogContent","mt","Box","px","List","ListItem","display","flexDirection","alignItems","Typography","variant","color","gutterBottom","Divider","CheckCircleIcon","mr","CancelIcon","AccessTimeIcon","textTransform","createdAt","_Fragment","justifyContent","Button","onClick","flex","ml","DialogActions","PasswordConfirmDialog","localPassword","setLocalPassword","inputRef","React","timer","setTimeout","current","focus","clearTimeout","handleConfirmClick","adminEmail","API_KEY","verifyEndpoint","verifyOptions","json","handleConfirmApproval","disableEscapeKeyDown","pt","mb","TextField","type","label","value","onChange","e","target","onKeyDown","key","preventDefault","helperText","disabled","autoComplete","boxShadow","py","minWidth","CircularProgress","size","Container","textAlign","startIcon","HomeIcon","alignSelf","Paper","elevation","Tabs","handleTabChange","event","newValue","borderColor","Tab","placeholder","InputProps","startAdornment","InputAdornment","position","SearchIcon","align","my","p","border","backgroundColor","gap","PersonIcon","flexGrow","EmailIcon","borderTop","endIcon","MoreVertIcon","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","colSpan"],"sourceRoot":""}