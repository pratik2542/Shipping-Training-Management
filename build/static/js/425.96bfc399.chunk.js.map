{"version":3,"file":"static/js/425.96bfc399.chunk.js","mappings":"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","sources":["components/Records.js","utils/pdfGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  TableContainer,\r\n  IconButton,\r\n  TextField,\r\n  InputAdornment,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Box,\r\n} from '@mui/material';\r\nimport { collection, getDocs, deleteDoc, doc } from 'firebase/firestore';\r\nimport { db, auth } from '../firebase/config';\r\nimport { testDb, testAuth } from '../firebase/testConfig';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport { generatePDF } from '../utils/pdfGenerator';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { signOut } from 'firebase/auth';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nconst Records = () => {\r\n  const navigate = useNavigate();\r\n  const [records, setRecords] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\r\n  const [selectedRecord, setSelectedRecord] = useState(null);\r\n  const [isAdmin] = useState(localStorage.getItem('isAdmin') === 'true');\r\n\r\n  useEffect(() => {\r\n    fetchRecords();\r\n  }, []);\r\n\r\n  const fetchRecords = async () => {\r\n    try {\r\n      const isTestUser = localStorage.getItem('isTestUser') === 'true';\r\n      const dbInstance = isTestUser ? testDb : db;\r\n      const collectionName = isTestUser ? 'test_shipments' : 'shipments';\r\n      \r\n      // First, check if collection exists for test users\r\n      if (isTestUser) {\r\n        // For test users, empty records are normal - don't show error\r\n        const querySnapshot = await getDocs(collection(dbInstance, collectionName));\r\n        const recordsData = querySnapshot.docs.map(doc => ({\r\n          ...doc.data(),\r\n          docId: doc.id,\r\n          id: doc.data().id\r\n        }));\r\n        setRecords(recordsData);\r\n      } else {\r\n        // For regular users, proceed with normal fetch\r\n        const querySnapshot = await getDocs(collection(dbInstance, collectionName));\r\n        const recordsData = querySnapshot.docs.map(doc => ({\r\n          ...doc.data(),\r\n          docId: doc.id,\r\n          id: doc.data().id\r\n        }));\r\n        setRecords(recordsData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching records:', error);\r\n      const isTestUser = localStorage.getItem('isTestUser') === 'true';\r\n      if (!isTestUser) {\r\n        // Only show error alert for regular users\r\n        alert('Error fetching records');\r\n      }\r\n      // For test users, just set empty records\r\n      setRecords([]);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (record) => {\r\n    if (record.approverSign) {\r\n      alert('Cannot edit an approved record');\r\n      return;\r\n    }\r\n    const editId = record.docId;\r\n    console.log('Editing record with ID:', editId);\r\n    if (!editId) {\r\n      alert('Invalid record ID');\r\n      return;\r\n    }\r\n    navigate(`/shipping-form?edit=${editId}`);\r\n  };\r\n\r\n  const handleView = (record) => {\r\n    setSelectedRecord(record);\r\n    setViewDialogOpen(true);\r\n  };\r\n\r\n  const handleViewPDF = (pdfData) => {\r\n    // Check if the data is base64\r\n    if (pdfData.startsWith('data:application/pdf;base64,')) {\r\n      // Convert base64 to blob\r\n      const base64Response = fetch(pdfData);\r\n      base64Response.then(res => res.blob()).then(blob => {\r\n        const url = window.URL.createObjectURL(blob);\r\n        window.open(url, '_blank');\r\n        window.URL.revokeObjectURL(url);\r\n      });\r\n    } else {\r\n      // If it's already a URL, just open it\r\n      window.open(pdfData, '_blank');\r\n    }\r\n  };\r\n\r\n  const handleGeneratePDF = async (record) => {\r\n    try {\r\n      const pdfDoc = await generatePDF(record);\r\n      const pdfBlob = new Blob([pdfDoc], { type: 'application/pdf' });\r\n      const pdfUrl = URL.createObjectURL(pdfBlob);\r\n      \r\n      window.open(pdfUrl, '_blank');\r\n      setTimeout(() => URL.revokeObjectURL(pdfUrl), 1000);\r\n    } catch (error) {\r\n      console.error('Error generating PDF:', error);\r\n      alert('Error generating PDF. Please try again.');\r\n    }\r\n  };\r\n\r\n  const cleanupTestData = async () => {\r\n    try {\r\n      // Get all documents from test_shipments collection\r\n      const querySnapshot = await getDocs(collection(testDb, 'test_shipments'));\r\n      \r\n      // Delete each document\r\n      const deletePromises = querySnapshot.docs.map(doc => deleteDoc(doc.ref));\r\n      await Promise.all(deletePromises);\r\n\r\n      // Delete test user account\r\n      const user = testAuth.currentUser;\r\n      if (user) {\r\n        await user.delete();\r\n      }\r\n      \r\n      console.log('Test data cleanup completed');\r\n    } catch (error) {\r\n      console.error('Error cleaning up test data:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const isTestUser = localStorage.getItem('isTestUser') === 'true';\r\n      \r\n      if (isTestUser) {\r\n        // First clean up all test data\r\n        await cleanupTestData();\r\n        // Then sign out\r\n        await signOut(testAuth);\r\n      } else {\r\n        await signOut(auth);\r\n      }\r\n      \r\n      localStorage.removeItem('isTestUser');\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Error during logout:', error);\r\n      // Still try to navigate away even if there's an error\r\n      localStorage.removeItem('isTestUser');\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (record) => {\r\n    if (!isAdmin) return;\r\n\r\n    if (window.confirm('Are you sure you want to delete this record? This action cannot be undone.')) {\r\n      try {\r\n        const dbInstance = localStorage.getItem('isTestUser') === 'true' ? testDb : db;\r\n        const collectionName = localStorage.getItem('isTestUser') === 'true' ? 'test_shipments' : 'shipments';\r\n        \r\n        await deleteDoc(doc(dbInstance, collectionName, record.docId));\r\n        // Refresh records list\r\n        fetchRecords();\r\n        alert('Record deleted successfully');\r\n        navigate('/dashboard');\r\n      } catch (error) {\r\n        console.error('Error deleting record:', error);\r\n        alert('Error deleting record');\r\n      }\r\n    }\r\n  };\r\n\r\n  const filteredRecords = records.filter(record => {\r\n    const shipmentCode = record.shipmentCode || ''; // Change from dpNumber to shipmentCode\r\n    const itemName = record.itemName || '';\r\n    const searchTermLower = searchTerm.toLowerCase();\r\n    \r\n    return shipmentCode.toString().toLowerCase().includes(searchTermLower) ||\r\n           itemName.toString().toLowerCase().includes(searchTermLower);\r\n  });\r\n\r\n  const renderTableRow = (record) => (\r\n    <TableRow \r\n      key={record.id || record.docId}\r\n      sx={{ '&:hover': { backgroundColor: 'action.hover' } }}\r\n    >\r\n      <TableCell>{record.shipmentCode || 'N/A'}</TableCell> {/* Change from dpNumber to shipmentCode */}\r\n      <TableCell>{record.shipmentDate || 'N/A'}</TableCell>\r\n      <TableCell>{record.itemName || 'N/A'}</TableCell>\r\n      <TableCell>\r\n        <Typography\r\n          sx={{\r\n            color: record.approverSign ? 'success.main' : \r\n                  record.inspectorSign ? 'info.main' : \r\n                  record.receiverSign ? 'warning.main' : 'gray',\r\n            fontWeight: 500,\r\n          }}\r\n        >\r\n          {record.approverSign ? 'Approved' : \r\n           record.inspectorSign ? 'Pending Approval' : \r\n           record.receiverSign ? 'Pending Inspection' : 'Pending Shipment'}\r\n        </Typography>\r\n      </TableCell>\r\n      <TableCell>\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={() => handleEdit(record)}\r\n          disabled={record.approverSign}\r\n          sx={{ mr: 1 }}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton \r\n          color=\"secondary\"\r\n          onClick={() => handleView(record)}\r\n          sx={{ mr: 1 }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={() => handleGeneratePDF(record)}\r\n          sx={{ mr: 1 }}\r\n        >\r\n          <PictureAsPdfIcon />\r\n        </IconButton>\r\n        {isAdmin && (\r\n          <IconButton\r\n            color=\"error\"\r\n            onClick={() => handleDelete(record)}\r\n            sx={{ mr: 1 }}\r\n            title=\"Delete Record\"\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        )}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n\r\n  const ViewDialog = () => (\r\n    <Dialog \r\n      open={viewDialogOpen} \r\n      onClose={() => setViewDialogOpen(false)}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>\r\n        Shipping Record Details - {selectedRecord?.shipmentCode}  {/* Update from dpNumber to shipmentCode */}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {selectedRecord && (\r\n          <Table>\r\n            <TableBody>\r\n              {/* Basic Details */}\r\n              <TableRow>\r\n                <TableCell><strong>Shipment Code</strong></TableCell>  {/* Update label */}\r\n                <TableCell>{selectedRecord.shipmentCode}</TableCell>  {/* Update from dpNumber */}\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell><strong>Shipment Date</strong></TableCell>\r\n                <TableCell>{selectedRecord.shipmentDate}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell><strong>Item Number</strong></TableCell>\r\n                <TableCell>{selectedRecord.itemNo}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell><strong>Item Name</strong></TableCell>\r\n                <TableCell>{selectedRecord.itemName}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell><strong>Lot Number</strong></TableCell>\r\n                <TableCell>{selectedRecord.lotNumber}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell><strong>Quantities</strong></TableCell>\r\n                <TableCell>{selectedRecord.quantities}</TableCell>\r\n              </TableRow>\r\n\r\n              {/* Receiver Details */}\r\n              {selectedRecord.receiverName && (\r\n                <>\r\n                  <TableRow>\r\n                    <TableCell><strong>Receiver Name</strong></TableCell>\r\n                    <TableCell>{selectedRecord.receiverName}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell><strong>Receiver Date</strong></TableCell>\r\n                    <TableCell>{selectedRecord.receiverDate}</TableCell>\r\n                  </TableRow>\r\n                  {selectedRecord.receiverSign && (\r\n                    <TableRow>\r\n                      <TableCell><strong>Receiver Signature</strong></TableCell>\r\n                      <TableCell>\r\n                        <img \r\n                          src={selectedRecord.receiverSign} \r\n                          alt=\"Receiver Signature\" \r\n                          style={{ maxWidth: '200px' }}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {/* Inspector Details */}\r\n              {selectedRecord.inspectorName && (\r\n                <>\r\n                  <TableRow>\r\n                    <TableCell><strong>Inspector Name</strong></TableCell>\r\n                    <TableCell>{selectedRecord.inspectorName}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell><strong>Inspector Date</strong></TableCell>\r\n                    <TableCell>{selectedRecord.inspectorDate}</TableCell>\r\n                  </TableRow>\r\n                  {selectedRecord.inspectorSign && (\r\n                    <TableRow>\r\n                      <TableCell><strong>Inspector Signature</strong></TableCell>\r\n                      <TableCell>\r\n                        <img \r\n                          src={selectedRecord.inspectorSign} \r\n                          alt=\"Inspector Signature\" \r\n                          style={{ maxWidth: '200px' }}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {/* Approver Details */}\r\n              {selectedRecord.approverName && (\r\n                <>\r\n                  <TableRow>\r\n                    <TableCell><strong>Approver Name</strong></TableCell>\r\n                    <TableCell>{selectedRecord.approverName}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell><strong>Approver Date</strong></TableCell>\r\n                    <TableCell>{selectedRecord.approverDate}</TableCell>\r\n                  </TableRow>\r\n                  {selectedRecord.approverSign && (\r\n                    <TableRow>\r\n                      <TableCell><strong>Approver Signature</strong></TableCell>\r\n                      <TableCell>\r\n                        <img \r\n                          src={selectedRecord.approverSign} \r\n                          alt=\"Approver Signature\" \r\n                          style={{ maxWidth: '200px' }}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {/* Attachment */}\r\n              {selectedRecord.attachmentUrl && (\r\n                <TableRow>\r\n                  <TableCell><strong>Attachment</strong></TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      onClick={() => handleViewPDF(selectedRecord.attachmentUrl)}\r\n                    >\r\n                      View PDF\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setViewDialogOpen(false)}>Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\r\n        <Typography \r\n          variant=\"h4\" \r\n          sx={{ fontWeight: 600, color: 'primary.main', mt: 2  }}\r\n        >\r\n          Shipping Records\r\n        </Typography>\r\n        <Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<HomeIcon />}\r\n            onClick={() => navigate('/dashboard')}\r\n            sx={{ mr: 2, mt: 2  }}\r\n          >\r\n            Home\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<LogoutIcon />}\r\n            onClick={handleLogout}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      \r\n      <TextField\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        placeholder=\"Search by Shipment Code or Item Name\"  /* Update placeholder */\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        sx={{ mb: 3 }}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow sx={{ backgroundColor: 'primary.main' }}>\r\n              <TableCell sx={{ color: 'white', fontWeight: 600 }}>Shipment Code</TableCell>  {/* Update header */}\r\n              <TableCell sx={{ color: 'white', fontWeight: 600 }}>Shipment Date</TableCell>\r\n              <TableCell sx={{ color: 'white', fontWeight: 600 }}>Item Name</TableCell>\r\n              <TableCell sx={{ color: 'white', fontWeight: 600 }}>Status</TableCell>\r\n              <TableCell sx={{ color: 'white', fontWeight: 600 }}>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filteredRecords.map(record => renderTableRow(record))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <ViewDialog />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Records;","import jsPDF from 'jspdf';\r\n\r\nexport const generatePDF = async (data) => {\r\n  try {\r\n    const doc = new jsPDF();\r\n    \r\n    // Add header\r\n    doc.setFontSize(20);\r\n    doc.text(\"Shipping Form\", 105, 15, { align: \"center\" });\r\n    \r\n    // Add form data\r\n    doc.setFontSize(12);\r\n    let y = 30;\r\n    \r\n    // Add all form fields\r\n    const fields = [\r\n      ['DP Number', data.dpNumber],\r\n      ['ID', data.id],\r\n      ['Shipment Date', data.shipmentDate],\r\n      ['Item No', data.itemNo],\r\n      ['Item Name', data.itemName],\r\n      ['Lot Number', data.lotNumber],\r\n      ['Quantities', data.quantities],\r\n    ];\r\n\r\n    fields.forEach(([label, value]) => {\r\n      doc.text(`${label}: ${value || ''}`, 20, y);\r\n      y += 10;\r\n    });\r\n    \r\n    // Add sections with proper spacing\r\n    const addSection = (title, name, date, signature, yPos) => {\r\n      doc.setFontSize(14);\r\n      doc.text(title, 20, yPos);\r\n      doc.setFontSize(12);\r\n      doc.text(`Name: ${name || ''}`, 20, yPos + 10);\r\n      doc.text(`Date: ${date || ''}`, 20, yPos + 20);\r\n      if (signature) {\r\n        doc.addImage(signature, 'PNG', 20, yPos + 25, 50, 25);\r\n      }\r\n      return yPos + 60;\r\n    };\r\n\r\n    // Add each section\r\n    y = addSection('Receiver Details', data.receiverName, data.receiverDate, data.receiverSign, y + 10);\r\n    y = addSection('Inspector Details', data.inspectorName, data.inspectorDate, data.inspectorSign, y);\r\n    y = addSection('Approver Details', data.approverName, data.approverDate, data.approverSign, y);\r\n\r\n    return doc.output('arraybuffer');\r\n  } catch (error) {\r\n    console.error('Error generating PDF:', error);\r\n    throw new Error('Failed to generate PDF');\r\n  }\r\n}; "],"names":["Records","navigate","useNavigate","records","setRecords","useState","searchTerm","setSearchTerm","viewDialogOpen","setViewDialogOpen","selectedRecord","setSelectedRecord","isAdmin","localStorage","getItem","useEffect","fetchRecords","async","isTestUser","dbInstance","testDb","db","collectionName","recordsData","getDocs","collection","docs","map","doc","data","docId","id","error","console","alert","handleGeneratePDF","pdfDoc","jsPDF","setFontSize","text","align","y","dpNumber","shipmentDate","itemNo","itemName","lotNumber","quantities","forEach","_ref","label","value","addSection","title","name","date","signature","yPos","addImage","receiverName","receiverDate","receiverSign","inspectorName","inspectorDate","inspectorSign","approverName","approverDate","approverSign","output","Error","generatePDF","record","pdfBlob","Blob","type","pdfUrl","URL","createObjectURL","window","open","setTimeout","revokeObjectURL","filteredRecords","filter","shipmentCode","searchTermLower","toLowerCase","toString","includes","renderTableRow","_jsxs","TableRow","sx","backgroundColor","children","_jsx","TableCell","Typography","color","fontWeight","IconButton","onClick","editId","log","handleEdit","disabled","mr","EditIcon","handleView","VisibilityIcon","PictureAsPdfIcon","confirm","deleteDoc","handleDelete","DeleteIcon","ViewDialog","Dialog","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","Table","TableBody","_Fragment","src","alt","style","attachmentUrl","Button","variant","size","pdfData","startsWith","fetch","then","res","blob","url","DialogActions","Container","mt","mb","Box","display","justifyContent","alignItems","startIcon","HomeIcon","LogoutIcon","deletePromises","ref","Promise","all","user","testAuth","currentUser","delete","cleanupTestData","signOut","auth","removeItem","TextField","placeholder","onChange","e","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","TableContainer","component","Paper","TableHead"],"sourceRoot":""}