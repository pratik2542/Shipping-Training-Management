{"version":3,"file":"static/js/505.4e29493c.chunk.js","mappings":"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","sources":["utils/firebaseAuthApi.js","utils/emailService.js","components/AdminVerification.js"],"sourcesContent":["// Create a dedicated helper for Firebase Auth API calls\r\n\r\nimport { getApiKey } from '../firebase/config';\r\n\r\n// Base endpoints\r\nconst AUTH_BASE_URL = 'https://identitytoolkit.googleapis.com/v1/accounts';\r\n\r\n/**\r\n * Makes a secure call to Firebase Auth REST API\r\n * @param {string} endpoint - The endpoint to call\r\n * @param {Object} data - The data to send\r\n * @returns {Promise<Object>} - The API response\r\n */\r\nexport const callFirebaseAuthApi = async (endpoint, data) => {\r\n  try {\r\n    const apiKey = getApiKey();\r\n    if (!apiKey) throw new Error('API key not available');\r\n    \r\n    const url = `${AUTH_BASE_URL}:${endpoint}?key=${apiKey}`;\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Firebase Auth API error (${endpoint}):`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// API methods for specific operations\r\nexport const createUser = (email, password) => {\r\n  return callFirebaseAuthApi('signUp', {\r\n    email,\r\n    password,\r\n    returnSecureToken: false\r\n  });\r\n};\r\n\r\nexport const verifyEmail = (email) => {\r\n  return callFirebaseAuthApi('createAuthUri', {\r\n    identifier: email,\r\n    continueUri: window.location.href\r\n  });\r\n};\r\n\r\nexport const sendPasswordReset = (email) => {\r\n  return callFirebaseAuthApi('sendOobCode', {\r\n    requestType: 'PASSWORD_RESET',\r\n    email\r\n  });\r\n};\r\n\r\nexport const verifyPassword = (email, password) => {\r\n  return callFirebaseAuthApi('signInWithPassword', {\r\n    email,\r\n    password,\r\n    returnSecureToken: true\r\n  });\r\n};\r\n","// Fix EmailJS initialization and error handling\r\n\r\nimport emailjs from '@emailjs/browser';\r\n\r\n// Initialize EmailJS with your public key\r\n// This should be done once when the app starts\r\nemailjs.init(\"P_vvkj76LJzEvipCY\");\r\n\r\nconst SERVICE_ID = 'service_1pw3job';\r\nconst TEMPLATE_ID = 'template_d7h6i4d';\r\n\r\n// Wrapper function to ensure emailjs is initialized before sending\r\nconst safeEmailjsSend = async (serviceId, templateId, templateParams) => {\r\n  try {\r\n    if (!emailjs.send) {\r\n      console.error('EmailJS send function not available');\r\n      throw new Error('Email service not properly initialized');\r\n    }\r\n    return await emailjs.send(serviceId, templateId, templateParams);\r\n  } catch (error) {\r\n    console.error('Error in emailjs.send:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const sendEmail = async ({ to, name, subject, html }) => {\r\n  try {\r\n    const templateParams = {\r\n      to_email: to,\r\n      to_name: name,\r\n      subject: subject,\r\n      message: html\r\n    };\r\n\r\n    console.log('Sending email with params:', templateParams);\r\n    const response = await safeEmailjsSend(SERVICE_ID, TEMPLATE_ID, templateParams);\r\n    console.log('Email sent successfully:', response);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error sending email:', error);\r\n    throw new Error(`Error sending email: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const sendApprovalEmail = async (userData, tempPassword) => {\r\n  try {\r\n    const userName = userData.name || userData.email.split('@')[0];\r\n    \r\n    // When using EmailJS templates, just pass the template variables\r\n    const templateParams = {\r\n      to_email: userData.email,\r\n      to_name: userName,\r\n      message: tempPassword,\r\n      subject: \"Your Account Has Been Approved\"\r\n    };\r\n\r\n    console.log('Sending approval email to:', userData.email);\r\n    const response = await safeEmailjsSend(SERVICE_ID, TEMPLATE_ID, templateParams);\r\n    console.log('Approval email sent successfully:', response);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Failed to send approval email:', error);\r\n    // Show the error but continue with the approval process\r\n    alert(`Note: Email could not be sent to ${userData.email}. Please inform the user manually.`);\r\n    // Return a fake success to allow the approval process to continue\r\n    return { status: \"Email failed but continuing with approval\" };\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Container, \r\n  Paper, \r\n  Typography, \r\n  Button, \r\n  Tabs, \r\n  Tab, \r\n  Box, \r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  TextField,\r\n  InputAdornment,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { collection, query, getDocs, doc, updateDoc, orderBy, deleteDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase/config';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useTheme, useMediaQuery } from '@mui/material';\r\nimport { sendApprovalEmail } from '../utils/emailService';\r\nimport { createUser, verifyPassword } from '../utils/firebaseAuthApi';\r\n\r\nconst AdminVerification = () => {\r\n  const [requests, setRequests] = useState([]);\r\n  const [filteredRequests, setFilteredRequests] = useState([]);\r\n  const [tabValue, setTabValue] = useState(0); // 0: Pending, 1: Approved, 2: Rejected\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [confirmError, setConfirmError] = useState('');\r\n  const [userToAction, setUserToAction] = useState(null);\r\n  const [actionType, setActionType] = useState(null); // 'approve', 'reject', or 'delete'\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  useEffect(() => {\r\n    // Check if user is admin\r\n    const isAdmin = localStorage.getItem('isAdmin') === 'true';\r\n    if (!isAdmin) {\r\n      navigate('/dashboard');\r\n      return;\r\n    }\r\n    \r\n    fetchRequests();\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    // Filter requests based on search term and selected tab\r\n    const filtered = requests.filter(request => {\r\n      const matchesSearch = !searchTerm || \r\n        request.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        request.email?.toLowerCase().includes(searchTerm.toLowerCase());\r\n        \r\n      const matchesTab = \r\n        (tabValue === 0 && request.status === 'pending') || \r\n        (tabValue === 1 && request.status === 'approved') ||\r\n        (tabValue === 2 && request.status === 'rejected');\r\n        \r\n      return matchesSearch && matchesTab;\r\n    });\r\n    \r\n    setFilteredRequests(filtered);\r\n  }, [requests, searchTerm, tabValue]);\r\n\r\n  const fetchRequests = async () => {\r\n    try {\r\n      const q = query(\r\n        collection(db, 'userRequests'),\r\n        orderBy('createdAt', 'desc')\r\n      );\r\n      \r\n      const snapshot = await getDocs(q);\r\n      const requestsData = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      \r\n      setRequests(requestsData);\r\n      console.log('Requests loaded:', requestsData.length);\r\n    } catch (error) {\r\n      console.error('Error fetching requests:', error);\r\n      alert('Error loading user requests');\r\n    }\r\n  };\r\n\r\n  const initiateUserAction = (request, action) => {\r\n    setUserToAction(request);\r\n    setActionType(action || 'process'); // Default to 'process' if no action specified\r\n    setConfirmError('');\r\n    setConfirmDialogOpen(true);\r\n  };\r\n\r\n  // Fix the issue where admin gets logged out after approving a user\r\n\r\n  // In the handleUserAction function, replace the createUserWithEmailAndPassword approach\r\n  // with the Firebase Admin SDK or REST API approach\r\n\r\n  const handleUserAction = async (request, action) => {\r\n    try {\r\n      const requestRef = doc(db, 'userRequests', request.id);\r\n      \r\n      if (action === 'approve') {\r\n        try {\r\n          const tempPassword = 'tempPassword123';\r\n          \r\n          // Use the secure API helper\r\n          try {\r\n            await createUser(request.email, tempPassword);\r\n            console.log('User created successfully');\r\n          } catch (error) {\r\n            console.log('User might already exist, continuing with approval');\r\n          }\r\n          \r\n          // Send reset email using the helper\r\n          //await sendPasswordReset(request.email);\r\n          \r\n          // Send custom welcome email\r\n          await sendApprovalEmail(request, tempPassword);\r\n          \r\n          // Update request status in Firestore\r\n          await updateDoc(requestRef, {\r\n            status: 'approved',\r\n            approvedAt: new Date().toISOString()\r\n          });\r\n          \r\n          fetchRequests();\r\n          alert(`User ${request.email} approved and welcome email sent.`);\r\n        } catch (error) {\r\n          console.error('Error during user approval:', error);\r\n          throw error;\r\n        }\r\n      } else if (action === 'reject') {\r\n        await updateDoc(requestRef, { \r\n          status: 'rejected',\r\n          rejectedAt: new Date().toISOString()\r\n        });\r\n        \r\n        fetchRequests();\r\n        alert(`User ${request.email} rejected.`);\r\n      } else if (action === 'delete') {\r\n        // Delete the document from Firestore\r\n        await deleteDoc(requestRef);\r\n        fetchRequests();\r\n        alert(`User ${request.email} deleted.`);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error during user ${action}:`, error);\r\n      alert(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Also update the handleConfirmApproval function to use the REST API for authentication\r\n  const handleConfirmAction = async (password) => {\r\n    if (!userToAction || !password || !actionType) return;\r\n    \r\n    setConfirmLoading(true);\r\n    setConfirmError('');\r\n    \r\n    try {\r\n      // Get admin email from localStorage\r\n      const adminEmail = localStorage.getItem('adminEmail');\r\n      if (!adminEmail) {\r\n        throw new Error('Admin session not found. Please log in again.');\r\n      }\r\n      \r\n      try {\r\n        // Use the secure API helper for verification\r\n        const result = await verifyPassword(adminEmail, password);\r\n        \r\n        if (result.error) {\r\n          setConfirmError(result.error.message || 'Invalid password');\r\n          setConfirmLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Successfully authenticated - proceed with approval\r\n        await handleUserAction(userToAction, actionType);\r\n        setConfirmDialogOpen(false);\r\n      } catch (error) {\r\n        console.error('Authentication error:', error);\r\n        setConfirmError('Authentication failed. Please try again.');\r\n        setConfirmLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Confirmation error:', error);\r\n      setConfirmError(error.message);\r\n    } finally {\r\n      setConfirmLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const openUserDetails = (user) => {\r\n    setSelectedUser(user);\r\n    setDialogOpen(true);\r\n  };\r\n  \r\n  // Format date from ISO string to readable format\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    \r\n    const date = new Date(dateString);\r\n    return date.toLocaleString();\r\n  };\r\n  \r\n  // Render a user card for mobile view\r\n  const renderMobileUserCard = (request) => (\r\n    <Paper\r\n      key={request.id}\r\n      elevation={2}\r\n      sx={{\r\n        mb: 2,\r\n        p: 2,\r\n        border: '1px solid #eaeaea',\r\n        backgroundColor: \r\n          request.status === 'approved' ? '#f0f7f0' :\r\n          request.status === 'rejected' ? '#f7f0f0' : 'white'\r\n      }}\r\n    >\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n          <PersonIcon sx={{ mr: 1, color: 'primary.main' }} />\r\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n            {request.name || 'No Name'}\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <EmailIcon sx={{ mr: 1, fontSize: '1rem', color: 'text.secondary' }} />\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {request.email}\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <AccessTimeIcon sx={{ mr: 1, fontSize: '1rem', color: 'text.secondary' }} />\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {formatDate(request.createdAt)}\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <Box sx={{ \r\n          display: 'flex', \r\n          alignItems: 'center',\r\n          color: \r\n            request.status === 'approved' ? 'success.main' :\r\n            request.status === 'rejected' ? 'error.main' : 'warning.main',\r\n          mt: 1\r\n        }}>\r\n          {request.status === 'approved' ? (\r\n            <CheckCircleIcon sx={{ mr: 1, fontSize: '1.2rem' }} />\r\n          ) : request.status === 'rejected' ? (\r\n            <CancelIcon sx={{ mr: 1, fontSize: '1.2rem' }} />\r\n          ) : (\r\n            <AccessTimeIcon sx={{ mr: 1, fontSize: '1.2rem' }} />\r\n          )}\r\n          <Typography \r\n            variant=\"body1\" \r\n            sx={{ \r\n              fontWeight: 600,\r\n              textTransform: 'capitalize'\r\n            }}\r\n          >\r\n            {request.status}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      \r\n      {/* Action buttons */}\r\n      {request.status === 'pending' && (\r\n        <Box \r\n          sx={{ \r\n            display: 'flex', \r\n            justifyContent: 'space-between', \r\n            mt: 2,\r\n            pt: 2,\r\n            borderTop: '1px solid #eaeaea'\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            sx={{ flex: 1, mr: 1 }}\r\n            onClick={() => initiateUserAction(request, 'approve')}\r\n          >\r\n            Approve\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n            size=\"small\"\r\n            sx={{ flex: 1, ml: 1 }}\r\n            onClick={() => initiateUserAction(request, 'reject')}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      \r\n      <Box sx={{ display: 'flex', mt: 2, gap: 1 }}>\r\n        <Button\r\n          variant=\"text\"\r\n          fullWidth\r\n          onClick={() => openUserDetails(request)}\r\n          endIcon={<MoreVertIcon />}\r\n        >\r\n          View Details\r\n        </Button>\r\n        <Button\r\n          variant=\"text\"\r\n          color=\"error\"\r\n          onClick={() => initiateUserAction(request, 'delete')}\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n  \r\n  // Render a table row for desktop view\r\n  const renderTableRow = (request) => (\r\n    <TableRow \r\n      key={request.id}\r\n      sx={{\r\n        backgroundColor: \r\n          request.status === 'approved' ? '#f0f7f0' :\r\n          request.status === 'rejected' ? '#f7f0f0' : 'white',\r\n        '&:hover': { backgroundColor: 'action.hover' }\r\n      }}\r\n    >\r\n      <TableCell>{request.name || 'No Name'}</TableCell>\r\n      <TableCell>{request.email}</TableCell>\r\n      <TableCell>{formatDate(request.createdAt)}</TableCell>\r\n      <TableCell>\r\n        <Box sx={{ \r\n          display: 'flex', \r\n          alignItems: 'center',\r\n          color: \r\n            request.status === 'approved' ? 'success.main' :\r\n            request.status === 'rejected' ? 'error.main' : 'warning.main'\r\n        }}>\r\n          {request.status === 'approved' ? (\r\n            <CheckCircleIcon sx={{ mr: 1, fontSize: 'small' }} />\r\n          ) : request.status === 'rejected' ? (\r\n            <CancelIcon sx={{ mr: 1, fontSize: 'small' }} />\r\n          ) : (\r\n            <AccessTimeIcon sx={{ mr: 1, fontSize: 'small' }} />\r\n          )}\r\n          <Typography \r\n            sx={{ \r\n              fontWeight: 500,\r\n              textTransform: 'capitalize'\r\n            }}\r\n          >\r\n            {request.status}\r\n          </Typography>\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell>\r\n        {request.status === 'pending' && (\r\n          <>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              sx={{ mr: 1 }}\r\n              onClick={() => initiateUserAction(request, 'approve')}\r\n            >\r\n              Approve\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              size=\"small\"\r\n              onClick={() => initiateUserAction(request, 'reject')}\r\n            >\r\n              Reject\r\n            </Button>\r\n          </>\r\n        )}\r\n        <Button\r\n          variant=\"text\"\r\n          size=\"small\"\r\n          sx={{ ml: request.status === 'pending' ? 1 : 0 }}\r\n          onClick={() => openUserDetails(request)}\r\n        >\r\n          Details\r\n        </Button>\r\n        <Button\r\n          variant=\"text\"\r\n          color=\"error\"\r\n          size=\"small\"\r\n          sx={{ ml: 1 }}\r\n          onClick={() => initiateUserAction(request, 'delete')}\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n  \r\n  // User details dialog\r\n  const UserDetailsDialog = () => (\r\n    <Dialog \r\n      open={dialogOpen} \r\n      onClose={() => setDialogOpen(false)}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      fullScreen={isMobile}\r\n    >\r\n      <DialogTitle sx={{ \r\n        fontSize: isMobile ? '1.25rem' : '1.5rem',\r\n        fontWeight: 500,\r\n        borderBottom: '1px solid #eaeaea',\r\n        pb: 2\r\n      }}>\r\n        User Details\r\n      </DialogTitle>\r\n      <DialogContent sx={{ mt: 2 }}>\r\n        {selectedUser && (\r\n          <Box sx={{ px: isMobile ? 0 : 2 }}>\r\n            <List>\r\n              <ListItem sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                  Name\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {selectedUser.name || 'No name provided'}\r\n                </Typography>\r\n              </ListItem>\r\n              <Divider />\r\n              \r\n              <ListItem sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                  Email\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {selectedUser.email}\r\n                </Typography>\r\n              </ListItem>\r\n              <Divider />\r\n              \r\n              <ListItem sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                  Status\r\n                </Typography>\r\n                <Box sx={{ \r\n                  display: 'flex', \r\n                  alignItems: 'center',\r\n                  color: \r\n                    selectedUser.status === 'approved' ? 'success.main' :\r\n                    selectedUser.status === 'rejected' ? 'error.main' : 'warning.main'\r\n                }}>\r\n                  {selectedUser.status === 'approved' ? (\r\n                    <CheckCircleIcon sx={{ mr: 1 }} />\r\n                  ) : selectedUser.status === 'rejected' ? (\r\n                    <CancelIcon sx={{ mr: 1 }} />\r\n                  ) : (\r\n                    <AccessTimeIcon sx={{ mr: 1 }} />\r\n                  )}\r\n                  <Typography \r\n                    variant=\"body1\" \r\n                    sx={{ \r\n                      fontWeight: 600,\r\n                      textTransform: 'capitalize'\r\n                    }}\r\n                  >\r\n                    {selectedUser.status}\r\n                  </Typography>\r\n                </Box>\r\n              </ListItem>\r\n              <Divider />\r\n              \r\n              <ListItem sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                  Request Date\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {formatDate(selectedUser.createdAt)}\r\n                </Typography>\r\n              </ListItem>\r\n              <Divider />\r\n              \r\n              {selectedUser.status === 'approved' && (\r\n                <>\r\n                  <ListItem sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                    <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                      Approval Date\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                      {formatDate(selectedUser.approvedAt)}\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <Divider />\r\n                </>\r\n              )}\r\n              \r\n              {selectedUser.status === 'rejected' && (\r\n                <>\r\n                  <ListItem sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                    <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                      Rejection Date\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                      {formatDate(selectedUser.rejectedAt)}\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <Divider />\r\n                </>\r\n              )}\r\n            </List>\r\n            \r\n            {selectedUser.status === 'pending' && (\r\n              <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setDialogOpen(false);\r\n                    initiateUserAction(selectedUser, 'approve');\r\n                  }}\r\n                  sx={{ flex: 1, mr: 1 }}\r\n                >\r\n                  Approve User\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"error\"\r\n                  onClick={() => {\r\n                    handleUserAction(selectedUser, 'reject');\r\n                    setDialogOpen(false);\r\n                  }}\r\n                  sx={{ flex: 1, ml: 1 }}\r\n                >\r\n                  Reject User\r\n                </Button>\r\n              </Box>\r\n            )}\r\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\r\n              <Button\r\n                variant=\"text\"\r\n                color=\"error\"\r\n                startIcon={<DeleteIcon />}\r\n                onClick={() => {\r\n                  setDialogOpen(false);\r\n                  initiateUserAction(selectedUser, 'delete');\r\n                }}\r\n              >\r\n                Delete User\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button \r\n          onClick={() => setDialogOpen(false)}\r\n          variant={isMobile ? \"contained\" : \"text\"}\r\n          fullWidth={isMobile}\r\n        >\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const PasswordConfirmDialog = () => {\r\n    const [localPassword, setLocalPassword] = useState('');\r\n    const inputRef = React.useRef(null);\r\n    \r\n    // Reset local state when dialog opens/closes\r\n    React.useEffect(() => {\r\n      if (confirmDialogOpen) {\r\n        setLocalPassword('');\r\n        // Focus the input after a brief delay to ensure the dialog is fully rendered\r\n        const timer = setTimeout(() => {\r\n          if (inputRef.current) {\r\n            inputRef.current.focus();\r\n          }\r\n        }, 50);\r\n        return () => clearTimeout(timer);\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [confirmDialogOpen, actionType]);\r\n  \r\n    const handleConfirmClick = () => {\r\n      if (!localPassword) return;\r\n      // Use the local password state for validation\r\n      handleConfirmAction(localPassword);\r\n    };\r\n  \r\n    const handleKeyDown = (e) => {\r\n      if (e.key === 'Enter' && localPassword && !confirmLoading) {\r\n        e.preventDefault();\r\n        handleConfirmClick();\r\n      }\r\n    };\r\n\r\n    const getActionText = () => {\r\n      switch (actionType) {\r\n        case 'approve': return 'approve';\r\n        case 'reject': return 'reject';\r\n        case 'delete': return 'delete';\r\n        default: return 'process';\r\n      }\r\n    };\r\n\r\n    const getActionColor = () => {\r\n      switch (actionType) {\r\n        case 'approve': return 'primary';\r\n        case 'reject': case 'delete': return 'error';\r\n        default: return 'primary';\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <Dialog\r\n        open={confirmDialogOpen}\r\n        onClose={() => !confirmLoading && setConfirmDialogOpen(false)}\r\n        maxWidth=\"xs\"\r\n        fullWidth\r\n        disableEscapeKeyDown={confirmLoading}\r\n      >\r\n        <DialogTitle sx={{ \r\n          borderBottom: '1px solid #eaeaea', \r\n          pb: 2,\r\n          fontWeight: 500\r\n        }}>\r\n          Confirm Admin Password\r\n        </DialogTitle>\r\n        <DialogContent sx={{ pt: 3, pb: 1 }}>\r\n          <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n            Please enter your password to {getActionText()}:\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" sx={{ mb: 3, fontWeight: 600 }}>\r\n            {userToAction?.email}\r\n          </Typography>\r\n          <TextField\r\n            inputRef={inputRef}\r\n            fullWidth\r\n            type=\"password\"\r\n            label=\"Admin Password\"\r\n            variant=\"outlined\"\r\n            value={localPassword}\r\n            onChange={(e) => setLocalPassword(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            error={!!confirmError}\r\n            helperText={confirmError}\r\n            disabled={confirmLoading}\r\n            autoComplete=\"current-password\"\r\n            sx={{\r\n              '& .MuiOutlinedInput-root': {\r\n                '&.Mui-focused': {\r\n                  boxShadow: '0 0 0 2px rgba(25, 118, 210, 0.2)',\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions sx={{ px: 3, py: 2 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => setConfirmDialogOpen(false)}\r\n            disabled={confirmLoading}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color={getActionColor()}\r\n            onClick={handleConfirmClick}\r\n            disabled={!localPassword || confirmLoading}\r\n            sx={{ ml: 1, minWidth: '120px' }}\r\n          >\r\n            {confirmLoading ? (\r\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                <CircularProgress size={20} sx={{ mr: 1, color: 'white' }} />\r\n                <span>Verifying</span>\r\n              </Box>\r\n            ) : (\r\n              `${(actionType || 'Confirm').charAt(0).toUpperCase() + (actionType || 'confirm').slice(1)}`\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        flexDirection: isMobile ? 'column' : 'row',\r\n        justifyContent: 'space-between', \r\n        alignItems: isMobile ? 'stretch' : 'center', \r\n        mb: 4 \r\n      }}>\r\n        <Typography \r\n          variant=\"h4\" \r\n          sx={{ \r\n            fontWeight: 600, \r\n            color: 'primary.main', \r\n            mt: 2,\r\n            textAlign: 'center',\r\n            fontSize: isMobile ? '1.75rem' : '2.125rem',\r\n            mb: isMobile ? 2 : 0\r\n          }}\r\n        >\r\n          User Verification\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<HomeIcon />}\r\n          onClick={() => navigate('/dashboard')}\r\n          sx={{ alignSelf: isMobile ? 'stretch' : 'flex-end' }}\r\n        >\r\n          Back to Dashboard\r\n        </Button>\r\n      </Box>\r\n\r\n      <Paper elevation={3} sx={{ mb: 4 }}>\r\n        <Tabs \r\n          value={tabValue} \r\n          onChange={handleTabChange}\r\n          variant={isMobile ? \"fullWidth\" : \"standard\"}\r\n          sx={{ borderBottom: 1, borderColor: 'divider' }}\r\n        >\r\n          <Tab \r\n            label=\"Pending\" \r\n            sx={{ py: 2 }} \r\n          />\r\n          <Tab \r\n            label=\"Approved\" \r\n            sx={{ py: 2 }} \r\n          />\r\n          <Tab \r\n            label=\"Rejected\" \r\n            sx={{ py: 2 }} \r\n          />\r\n        </Tabs>\r\n      </Paper>\r\n\r\n      <TextField\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        placeholder=\"Search by name or email\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        sx={{ mb: 3 }}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      {isMobile ? (\r\n        // Mobile view - cards\r\n        <Box>\r\n          {filteredRequests.length === 0 ? (\r\n            <Typography align=\"center\" sx={{ my: 4, color: 'text.secondary' }}>\r\n              No {tabValue === 0 ? 'pending' : tabValue === 1 ? 'approved' : 'rejected'} requests found\r\n            </Typography>\r\n          ) : (\r\n            filteredRequests.map(renderMobileUserCard)\r\n          )}\r\n        </Box>\r\n      ) : (\r\n        // Desktop view - table\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow sx={{ backgroundColor: 'primary.main' }}>\r\n                <TableCell sx={{ color: 'white', fontWeight: 600 }}>Name</TableCell>\r\n                <TableCell sx={{ color: 'white', fontWeight: 600 }}>Email</TableCell>\r\n                <TableCell sx={{ color: 'white', fontWeight: 600 }}>Request Date</TableCell>\r\n                <TableCell sx={{ color: 'white', fontWeight: 600 }}>Status</TableCell>\r\n                <TableCell sx={{ color: 'white', fontWeight: 600 }}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredRequests.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align=\"center\" sx={{ py: 3 }}>\r\n                    No {tabValue === 0 ? 'pending' : tabValue === 1 ? 'approved' : 'rejected'} requests found\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                filteredRequests.map(renderTableRow)\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n\r\n      <UserDetailsDialog />\r\n      <PasswordConfirmDialog />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminVerification;\r\n\r\n"],"names":["callFirebaseAuthApi","async","endpoint","data","apiKey","getApiKey","Error","url","response","fetch","method","headers","body","JSON","stringify","json","error","console","createUser","email","password","returnSecureToken","verifyEmail","identifier","continueUri","window","location","href","verifyPassword","emailjs","SERVICE_ID","TEMPLATE_ID","safeEmailjsSend","serviceId","templateId","templateParams","AdminVerification","requests","setRequests","useState","filteredRequests","setFilteredRequests","tabValue","setTabValue","searchTerm","setSearchTerm","selectedUser","setSelectedUser","dialogOpen","setDialogOpen","confirmDialogOpen","setConfirmDialogOpen","confirmLoading","setConfirmLoading","confirmError","setConfirmError","userToAction","setUserToAction","actionType","setActionType","navigate","useNavigate","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","useEffect","localStorage","getItem","fetchRequests","filtered","filter","request","_request$name","_request$email","matchesSearch","name","toLowerCase","includes","matchesTab","status","q","query","collection","db","orderBy","requestsData","getDocs","docs","map","doc","id","log","length","alert","initiateUserAction","action","handleUserAction","requestRef","tempPassword","userData","userName","split","to_email","to_name","message","subject","sendApprovalEmail","updateDoc","approvedAt","Date","toISOString","rejectedAt","deleteDoc","openUserDetails","user","formatDate","dateString","toLocaleString","UserDetailsDialog","_jsxs","Dialog","open","onClose","fullWidth","maxWidth","fullScreen","children","_jsx","DialogTitle","sx","fontSize","fontWeight","borderBottom","pb","DialogContent","mt","Box","px","List","ListItem","display","flexDirection","alignItems","Typography","variant","color","gutterBottom","Divider","CheckCircleIcon","mr","CancelIcon","AccessTimeIcon","textTransform","createdAt","_Fragment","justifyContent","Button","onClick","flex","ml","startIcon","DeleteIcon","DialogActions","PasswordConfirmDialog","localPassword","setLocalPassword","inputRef","React","timer","setTimeout","current","focus","clearTimeout","handleConfirmClick","adminEmail","result","handleConfirmAction","disableEscapeKeyDown","pt","mb","getActionText","TextField","type","label","value","onChange","e","target","onKeyDown","key","preventDefault","helperText","disabled","autoComplete","boxShadow","py","getActionColor","minWidth","CircularProgress","size","charAt","toUpperCase","slice","Container","textAlign","HomeIcon","alignSelf","Paper","elevation","Tabs","handleTabChange","event","newValue","borderColor","Tab","placeholder","InputProps","startAdornment","InputAdornment","position","SearchIcon","align","my","p","border","backgroundColor","gap","PersonIcon","flexGrow","EmailIcon","borderTop","endIcon","MoreVertIcon","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","colSpan"],"sourceRoot":""}